"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1855],{3905:(e,n,a)=>{a.d(n,{Zo:()=>l,kt:()=>d});var t=a(67294);function s(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){s(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var c=t.createContext({}),m=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},l=function(e){var n=m(e.components);return t.createElement(c.Provider,{value:n},e.children)},w={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},_=t.forwardRef((function(e,n){var a=e.components,s=e.mdxType,i=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),_=m(a),d=s,u=_["".concat(c,".").concat(d)]||_[d]||w[d]||i;return a?t.createElement(u,r(r({ref:n},l),{},{components:a})):t.createElement(u,r({ref:n},l))}));function d(e,n){var a=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var i=a.length,r=new Array(i);r[0]=_;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:s,r[1]=o;for(var m=2;m<i;m++)r[m]=a[m];return t.createElement.apply(null,r)}return t.createElement.apply(null,a)}_.displayName="MDXCreateElement"},24378:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>w,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var t=a(87462),s=(a(67294),a(3905));const i={},r="AWS \u4e91\u76d1\u63a7",o={unversionedId:"prometheus/CCSP/10.3-aws-cloudwatch",id:"prometheus/CCSP/10.3-aws-cloudwatch",title:"AWS \u4e91\u76d1\u63a7",description:"https://github.com/prometheus/cloudwatch_exporter",source:"@site/wiki/ops/prometheus/10-CCSP/10.3-aws-cloudwatch.md",sourceDirName:"prometheus/10-CCSP",slug:"/prometheus/CCSP/10.3-aws-cloudwatch",permalink:"/zhengxuexian_blog/ops/prometheus/CCSP/10.3-aws-cloudwatch",draft:!1,tags:[],version:"current",lastUpdatedBy:"zhengxuexian",lastUpdatedAt:1661407442,formattedLastUpdatedAt:"2022\u5e748\u670825\u65e5",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u534e\u4e3a\u4e91",permalink:"/zhengxuexian_blog/ops/prometheus/CCSP/10.2-huaweicloud-cloudeye"},next:{title:"\u817e\u8baf\u4e91",permalink:"/zhengxuexian_blog/ops/prometheus/CCSP/10.4-tencentcloud-metrics"}},c={},m=[],l={toc:m};function w(e){let{components:n,...a}=e;return(0,s.kt)("wrapper",(0,t.Z)({},l,a,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"aws-\u4e91\u76d1\u63a7"},"AWS \u4e91\u76d1\u63a7"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/prometheus/cloudwatch_exporter"},"https://github.com/prometheus/cloudwatch_exporter")),(0,s.kt)("p",null,"docker pull prom/cloudwatch-exporter:cloudwatch_exporter-0.11.0"),(0,s.kt)("h1",{id:"\u542f\u52a8"},"\u542f\u52a8"),(0,s.kt)("p",null,"\u914d\u7f6e\u6587\u4ef6"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"---\nregion: cn-north-1\nmetrics:\n - aws_namespace: AWS/ELB\n   aws_metric_name: HealthyHostCount\n   aws_dimensions: [AvailabilityZone, LoadBalancerName]\n   aws_statistics: [Average]\n\n - aws_namespace: AWS/ELB\n   aws_metric_name: UnHealthyHostCount\n   aws_dimensions: [AvailabilityZone, LoadBalancerName]\n   aws_statistics: [Average]\n\n - aws_namespace: AWS/ELB\n   aws_metric_name: RequestCount\n   aws_dimensions: [AvailabilityZone, LoadBalancerName]\n   aws_statistics: [Sum]\n")),(0,s.kt)("p",null,"\u5f53\u6709\u591a\u4e2a\u6307\u6807\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u6307\u6807\u90fd\u9700\u8981\u5217\u4e3e\u3002\u4ee5 ELB \u4e3a\u4f8b\uff0c\u53ef\u4ee5\u4f7f\u7528\u7684 Metric \u53ef\u4ee5\u5728\u4e0b\u5217\u94fe\u63a5\u4e2d\u627e\u5230\u3002\n",(0,s.kt)("a",{parentName:"p",href:"https://docs.amazonaws.cn/elasticloadbalancing/latest/classic/elb-cloudwatch-metrics.html"},"https://docs.amazonaws.cn/elasticloadbalancing/latest/classic/elb-cloudwatch-metrics.html")),(0,s.kt)("p",null,"\u8fd9\u4e9b\u6307\u6807\u7684\u6c47\u603b\u94fe\u63a5\u5728\u8fd9\u91cc\n",(0,s.kt)("a",{parentName:"p",href:"https://docs.amazonaws.cn/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html"},"https://docs.amazonaws.cn/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html")),(0,s.kt)("p",null,"\u5c06\u914d\u7f6e\u6587\u4ef6\u6302\u8f7d\u5230 \u7f3a\u7701\u8def\u5f84"),(0,s.kt)("p",null,"docker run -p 9106 -v /path/on/host/config.yml:/config/config.yml prom/cloudwatch-exporter"),(0,s.kt)("p",null,"\u5c06\u914d\u7f6e\u6587\u4ef6\u6302\u8f7d\u5230\u4efb\u610f\u4f4d\u7f6e\uff0c\u7136\u540e\u901a\u8fc7 Docker \u7684 CMD  \u547d\u4ee4\u6765\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u8def\u5f84"),(0,s.kt)("p",null,"docker run -p 9106 -v /path/on/host/us-west-1.yml:/config/us-west-1.yml --env AWS_ACCESS_KEY_ID=AKIxxxx --env AWS_SECRET_ACCESS_KEY=LExxxxxx prom/cloudwatch-exporter:v0.11.0 /config/us-west-1.yml"),(0,s.kt)("p",null,"\u5982\u679c\u6709\u591a\u4e2a AWS \u8d26\u53f7\u9700\u8981\u76d1\u63a7\uff0c\u90a3\u4e48\u8981\u6bcf\u4e2a\u8d26\u53f7\u542f\u52a8\u4e00\u4e2a cloudwatch-exporter \u3002"),(0,s.kt)("p",null,"AWS \u7684\u6240\u6709\u76d1\u63a7\u7684\u670d\u52a1\u548c\u5bf9\u5e94\u7684\u6307\u6807"),(0,s.kt)("h1",{id:"\u9644\u5f55\u4e00-\u5b8c\u6574\u7684\u914d\u7f6e\u793a\u4f8b\u6587\u4ef6"},"\u9644\u5f55\u4e00 \u5b8c\u6574\u7684\u914d\u7f6e\u793a\u4f8b\u6587\u4ef6"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"---\nregion: eu-west-1\nmetrics:\n- aws_namespace: AWS/NetworkELB\n  aws_metric_name: HealthyHostCount\n  aws_dimensions: [AvailabilityZone, LoadBalancer, TargetGroup]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/NetworkELB\n  aws_metric_name: UnHealthyHostCount\n  aws_dimensions: [AvailabilityZone, LoadBalancer, TargetGroup]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/ApplicationELB\n  aws_metric_name: HealthyHostCount\n  aws_dimensions: [AvailabilityZone, LoadBalancer, TargetGroup]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/ApplicationELB\n  aws_metric_name: UnHealthyHostCount\n  aws_dimensions: [AvailabilityZone, LoadBalancer, TargetGroup]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/ApplicationELB\n  aws_metric_name: RequestCount\n  aws_dimensions: [AvailabilityZone, LoadBalancer]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/ElastiCache\n  aws_metric_name: CPUUtilization\n  aws_dimensions: [CacheClusterId]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/ElastiCache\n  aws_metric_name: NetworkBytesIn\n  aws_dimensions: [CacheClusterId]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/ElastiCache\n  aws_metric_name: NetworkBytesOut\n  aws_dimensions: [CacheClusterId]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/ElastiCache\n  aws_metric_name: FreeableMemory\n  aws_dimensions: [CacheClusterId]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/ElastiCache\n  aws_metric_name: BytesUsedForCache\n  aws_dimensions: [CacheClusterId]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/ElastiCache\n  aws_metric_name: CurrConnections\n  aws_dimensions: [CacheClusterId]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/ElastiCache\n  aws_metric_name: NewConnections\n  aws_dimensions: [CacheClusterId]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/ElastiCache\n  aws_metric_name: CacheHits\n  aws_dimensions: [CacheClusterId]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/ElastiCache\n  aws_metric_name: CacheMisses\n  aws_dimensions: [CacheClusterId]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/ElastiCache\n  aws_metric_name: ReplicationLag\n  aws_dimensions: [CacheClusterId]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/Redshift\n  aws_metric_name: DatabaseConnections\n  aws_dimensions: [ClusterIdentifier]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/Redshift\n  aws_metric_name: HealthStatus\n  aws_dimensions: [ClusterIdentifier]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/Redshift\n  aws_metric_name: MaintenanceMode\n  aws_dimensions: [ClusterIdentifier]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/Redshift\n  aws_metric_name: CPUUtilization\n  aws_dimensions: [NodeID, ClusterIdentifier]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/Redshift\n  aws_metric_name: PercentageDiskSpaceUsed\n  aws_dimensions: [NodeID, ClusterIdentifier]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/Redshift\n  aws_metric_name: NetworkReceiveThroughput\n  aws_dimensions: [NodeID, ClusterIdentifier]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/Redshift\n  aws_metric_name: NetworkTransmitThroughput\n  aws_dimensions: [NodeID, ClusterIdentifier]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/Redshift\n  aws_metric_name: ReadLatency\n  aws_dimensions: [NodeID, ClusterIdentifier]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/Redshift\n  aws_metric_name: ReadThroughput\n  aws_dimensions: [NodeID, ClusterIdentifier]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/Redshift\n  aws_metric_name: ReadIOPS\n  aws_dimensions: [NodeID, ClusterIdentifier]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/Redshift\n  aws_metric_name: WriteLatency\n  aws_dimensions: [NodeID, ClusterIdentifier]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/Redshift\n  aws_metric_name: WriteThroughput\n  aws_dimensions: [NodeID, ClusterIdentifier]\n  aws_statistics: [Average]\n\n- aws_namespace: AWS/Redshift\n  aws_metric_name: WriteIOPS\n  aws_dimensions: [NodeID, ClusterIdentifier]\n  aws_statistics: [Average]\n\n# S3 Storage metrics are published to Cloudwatch 1x per day with a timestamp of midnight UTC, hence period_seconds: 86400\n# Publishing does not always occur at the same time, but it will occur before the next day, hence range_seconds: 172800\n- aws_namespace: AWS/S3\n  aws_metric_name: BucketSizeBytes\n  aws_dimensions: [BucketName, StorageType]\n  aws_statistics: [Average] # Valid statistics (https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html): Average\n  range_seconds: 172800\n  period_seconds: 86400\n\n- aws_namespace: AWS/S3\n  aws_metric_name: NumberOfObjects\n  aws_dimensions: [BucketName, StorageType]\n  aws_statistics: [Average] # Valid statistics (https://docs.aws.amazon.com/AmazonS3/latest/dev/cloudwatch-monitoring.html): Average\n  range_seconds: 172800\n  period_seconds: 86400\n\n# For CloudFront metrics, you have to set the region to us-east-1\n- aws_namespace: AWS/CloudFront\n  aws_metric_name: Requests\n  aws_statistics: [Sum]\n  aws_dimensions: [DistributionId, Region]\n  aws_dimension_select:\n   Region: [Global]\n\n- aws_namespace: AWS/CloudFront\n  aws_metric_name: BytesDownloaded\n  aws_statistics: [Sum]\n  aws_dimensions: [DistributionId, Region]\n  aws_dimension_select:\n   Region: [Global]\n\n- aws_namespace: AWS/CloudFront\n  aws_metric_name: 4xxErrorRate\n  aws_statistics: [Average]\n  aws_dimensions: [DistributionId, Region]\n  aws_dimension_select:\n   Region: [Global]\n\n- aws_namespace: AWS/CloudFront\n  aws_metric_name: 5xxErrorRate\n  aws_statistics: [Average]\n  aws_dimensions: [DistributionId, Region]\n  aws_dimension_select:\n   Region: [Global]\n\n- aws_namespace: AWS/CloudFront\n  aws_metric_name: BytesUploaded\n  aws_statistics: [Sum]\n  aws_dimensions: [DistributionId, Region]\n  aws_dimension_select:\n   Region: [Global]\n\n- aws_namespace: AWS/CloudFront\n  aws_metric_name: TotalErrorRate\n  aws_statistics: [Average]\n  aws_dimensions: [DistributionId, Region]\n  aws_dimension_select:\n   Region: [Global]\n")))}w.isMDXComponent=!0}}]);