"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7047],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(n),f=o,d=m["".concat(s,".").concat(f)]||m[f]||p[f]||a;return n?r.createElement(d,l(l({ref:t},c),{},{components:n})):r.createElement(d,l({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},53494:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=n(87462),o=(n(67294),n(3905));const a={},l=void 0,i={unversionedId:"prometheus/Troubleshoot/11.7-amtool-alert",id:"prometheus/Troubleshoot/11.7-amtool-alert",title:"11.7-amtool-alert",description:"",source:"@site/wiki/ops/prometheus/11-Troubleshoot/11.7-amtool-alert.md",sourceDirName:"prometheus/11-Troubleshoot",slug:"/prometheus/Troubleshoot/11.7-amtool-alert",permalink:"/zhengxuexian_blog/ops/prometheus/Troubleshoot/11.7-amtool-alert",draft:!1,tags:[],version:"current",lastUpdatedBy:"zhengxuexian",lastUpdatedAt:1661407442,formattedLastUpdatedAt:"2022\u5e748\u670825\u65e5",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Prometheus \u8fd0\u7ef4\u5de5\u5177 Promtool \uff08\u56db\uff09TSDB \u529f\u80fd",permalink:"/zhengxuexian_blog/ops/prometheus/Troubleshoot/11.6-promtool-tsdb"},next:{title:"11.8-amtool-silence",permalink:"/zhengxuexian_blog/ops/prometheus/Troubleshoot/11.8-amtool-silence"}},s={},u=[],c={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'/bin # ./amtool --help\nusage: amtool [<flags>] <command> [<args> ...]\n\nView and modify the current Alertmanager state.\n\nConfig File: The alertmanager tool will read a config file in YAML format from one of two default config\nlocations: $HOME/.config/amtool/config.yml or /etc/amtool/config.yml\n\nAll flags can be given in the config file, but the following are the suited for static configuration:\n\n  alertmanager.url\n    Set a default alertmanager url for each request\n\n  author\n    Set a default author value for new silences. If this argument is not\n    specified then the username will be used\n\n  require-comment\n    Bool, whether to require a comment on silence creation. Defaults to true\n\n  output\n    Set a default output type. Options are (simple, extended, json)\n\n  date.format\n    Sets the output format for dates. Defaults to "2006-01-02 15:04:05 MST"\n\n  tls.insecure.skip.verify\n    Skips TLS certificate verification for all HTTPS requests.\n    Defaults to false.\n\nFlags:\n  -h, --help           Show context-sensitive help (also try --help-long and --help-man).\n      --date.format="2006-01-02 15:04:05 MST"\n                       Format of date output\n  -v, --verbose        Verbose running information\n      --alertmanager.url=ALERTMANAGER.URL\n                       Alertmanager to talk to\n  -o, --output=simple  Output formatter (simple, extended, json)\n      --timeout=30s    Timeout for the executed command\n      --tls.insecure.skip.verify\n                       Skip TLS certificate verification\n      --version-check  Check alertmanager version. Use --no-version-check to disable.\n      --version        Show application version.\n\nCommands:\n  help [<command>...]\n  alert\n    query* [<flags>] [<matcher-groups>...]\n    add [<flags>] [<labels>...]\n  silence\n    add [<flags>] [<matcher-groups>...]\n    expire [<silence-ids>...]\n    import [<flags>] [<input-file>]\n    query* [<flags>] [<matcher-groups>...]\n    update [<flags>] [<update-ids>...]\n  check-config [<check-files>...]\n  cluster\n    show*\n  config\n    show*\n    routes [<flags>]\n      show*\n      test [<flags>] [<labels>...]\n  template\n    render --template.glob=TEMPLATE.GLOB --template.text=TEMPLATE.TEXT [<flags>]\n\n')))}p.isMDXComponent=!0}}]);